{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///simpledom-component.js","webpack:///webpack/bootstrap 3efa59fd0cd38d10e2b8","webpack:///./src/util.js","webpack:///./src/Store.js","webpack:///./src/converter.js","webpack:///./src/renderer.js","webpack:///./src/Component.js","webpack:///./src/main.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","isFunction","object","constructor","apply","dasherize","what","replace","$1","toLowerCase","flatten","array","Array","isArray","reduce","one","two","concat","Object","defineProperty","value","_classCallCheck","instance","Constructor","TypeError","generateId","generatedId","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","Store","initialeState","undefined","state","subscribers","componentsSubscribes","newState","oldState","_len","events","_key","eventsToPropagate","index","event","callback","component","componentWrapper","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","componentAlreadySubcribes","err","return","subscribes","push","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","keys","updateAttrs","node","element","attrs","startsWith","eventKey","substring","addEventListener","_util","toString","styleKey","style","classValue","classList","add","setAttribute","convertToNode","store","componentList","isComponent","componentInstance","componentClass","renderComponent","isElem","__asHtml","document","createTextNode","createElement","name","childLength","children","childElement","childNode","insertAdjacentHTML","appendChild","_toConsumableArray","arr","arr2","from","el","filter","child","cleanAnGetNode","realNode","getElementById","firstChild","removeChild","renderToDom","_Store","renderComponents","components","map","_converter","forEach","componentDidMount","mutationObserver","MutationObserver","body","contains","disconnect","unsubscribeAll","_ref","unsubscribeByEventAndId","splice","observe","childList","subtree","renderToString","_len2","elements","_key2","attributes","attribute","_typeof","join","content","renderTo","_len3","_key3","obj","Component","_renderer","_this","getOwnPropertyNames","getPrototypeOf","Function","bind","eventsToSubscribe","subscribe","reactToChangeState","get","otherRef","oldNode","newNode","parentNode","replaceChild","mustRefresh","refresh","_this2","result","render","ref","nodeRefHandler","width","height","oldRef","console","error","predicate","cond","elseElement","isTrue","_Component"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,mBAAAD,IAEAD,EAAA,mBAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASL,EAAQD,EAASM,GAE/BL,EAAOD,QAAUM,EAAoB,IAKhC,SAASL,EAAQD,GAEtB,YE7DM,SAASe,GAAWC,GACvB,SAAUA,GAAUA,EAAOC,aAAeD,EAAOL,MAAQK,EAAOE,OAI7D,QAASC,GAAUC,GACtB,MAAOA,GAAKC,QAAQ,WAAY,SAASC,GAAI,MAAO,IAAIA,EAAGC,gBAGxD,QAASC,GAAQC,GACpB,MAAKC,OAAMC,QAAQF,GAGZA,EAAMG,OACT,SAACC,EAAKC,GAAN,MAAcD,GAAIE,OAAOL,MAAMC,QAAQG,GAAON,EAAQM,GAAOA,QAHtDL,EFoDdO,OAAOC,eAAejC,EAAS,cAC3BkC,OAAO,IAEXlC,EElEee,aFmEff,EE9DemB,YF+DfnB,EE3DewB,WFiFV,SAASvB,EAAQD,GAEtB,YAUA,SAASmC,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCGpGjH,QAASC,KACL,MAAOC,KH2FVR,OAAOC,eAAejC,EAAS,cAC3BkC,OAAO,GAGX,IAAIO,GAAWT,OAAOU,QAAU,SAAUC,GAAU,IAAK,GAAIC,GAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,GAAIG,GAASF,UAAUD,EAAI,KAAK,GAAII,KAAOD,GAAcf,OAAOiB,UAAUC,eAAevC,KAAKoC,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,MAAOL,IAEnPQ,EAAe,WAAc,QAASC,GAAiBT,EAAQU,GAAS,IAAK,GAAIT,GAAI,EAAGA,EAAIS,EAAMP,OAAQF,IAAK,CAAE,GAAIU,GAAaD,EAAMT,EAAIU,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMzB,OAAOC,eAAeU,EAAQW,EAAWN,IAAKM,IAAiB,MAAO,UAAUjB,EAAaqB,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBf,EAAYY,UAAWS,GAAiBC,GAAaP,EAAiBf,EAAasB,GAAqBtB,MGpG7hBG,EAAc,CHkHLxC,GGzGA4D,MHyGgB,WGpGzB,QAAAA,KAAgC,GAApBC,GAAoBhB,UAAAC,OAAA,GAAAgB,SAAAjB,UAAA,GAAAA,UAAA,KAAAV,GAAA/B,KAAAwD,GAK5BxD,KAAK2D,MAAQF,EAKbzD,KAAK4D,eAML5D,KAAK6D,wBHmRR,MA5JAd,GAAaS,IACTZ,IAAK,cACLd,MAAO,SGjHAgC,GACR,GAAMC,GAAW/D,KAAK2D,KACtB3D,MAAK2D,MAALtB,KAAiBrC,KAAK2D,MAAUG,EAFH,QAAAE,GAAAvB,UAAAC,OAARuB,EAAQ3C,MAAA0C,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAARD,EAAQC,EAAA,GAAAzB,UAAAyB,EAO7B,KAHA,GAAMC,GAAoBF,EAAOtC,OAAO,KAEpCyC,EAAQD,EAAkBzB,OACvB0B,KAAS,CACZ,GAAMC,GAAQF,EAAkBC,EAChC,IAAIpE,KAAK4D,YAAYS,GACjB,IAAK,GAAMhE,KAAML,MAAK4D,YAAYS,GAC1BrE,KAAK4D,YAAYS,GAAOvB,eAAezC,IACvCL,KAAK4D,YAAYS,GAAOhE,GAAIgE,EAAOrE,KAAK2D,MAAOI,OHwI9DnB,IAAK,YACLd,MAAO,SGxHFuC,GAA0C,GAAnCC,GAAmC7B,UAAAC,OAAA,GAAAgB,SAAAjB,UAAA,GAAAA,UAAA,GAAxB,SAAAkB,KAAaY,EAAW9B,UAAA,EAC3CzC,MAAK4D,YAAYS,KAClBrE,KAAK4D,YAAYS,MAErB,IAAMhE,GAAK8B,GAGX,IAFAnC,KAAK4D,YAAYS,GAAOhE,GAAMiE,EAE1BC,EAAW,CACX,GAAIC,GAAmBd,OADZe,GAAA,EAAAC,GAAA,EAAAC,EAAAjB,MAAA,KAEX,OAAAkB,GAAAC,EAAwC7E,KAAK6D,qBAA7CiB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAmE,IAAxDS,GAAwDN,EAAA9C,KAC/D,IAAIoD,EAA0BX,YAAcA,EAAW,CACnDC,EAAmBU,CACnB,SALG,MAAAC,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,KAAAC,IAQNH,IACDA,GACID,YACAc,eAEJrF,KAAK6D,qBAAqByB,KAAKd,IAEnCA,EAAiBa,WAAWC,MACxBjB,QACAhE,OAIR,MAAOA,MH0JNuC,IAAK,aACLd,MAAO,SGpJDzB,GAAI,GAAAkF,IAAA,EAAAC,GAAA,EAAAC,EAAA/B,MAAA,KACX,OAAAgC,GAAAC,EAAkB/D,OAAOgE,KAAK5F,KAAK4D,aAAnCkB,OAAAC,cAAAQ,GAAAG,EAAAC,EAAAX,QAAAC,MAAAM,GAAA,EAAiD,IAAxClB,GAAwCqB,EAAA5D,KACzC9B,MAAK4D,YAAYS,GAAOhE,UACjBL,MAAK4D,YAAYS,GAAOhE,IAH5B,MAAA8E,GAAAK,GAAA,EAAAC,EAAAN,EAAA,aAAAI,GAAAI,EAAAP,QAAAO,EAAAP,SAAA,WAAAI,EAAA,KAAAC,QHsLV7C,IAAK,iBACLd,MAAO,WG3KR9B,KAAK4D,eACL5D,KAAK6D,2BHsLJjB,IAAK,0BACLd,MAAO,SG7KYuC,EAAOhE,GACvBL,KAAK4D,YAAYS,GAAOhE,UACjBL,MAAK4D,YAAYS,GAAOhE,OHkL/BmD,MAKN,SAAS3D,EAAQD,EAASM,GAE/B,YIvTM,SAAS2F,GAAYC,EAAMC,GAC9B,IAAK,GAAInD,KAAOmD,GAAQC,MAChBD,EAAQC,MAAMlD,eAAeF,IAA+Bc,SAAvBqC,EAAQC,MAAMpD,KAAoB,WACvE,GAAId,GAAQiE,EAAQC,MAAMpD,EAC1B,IAAY,QAARA,EACAd,EAAMgE,OACH,IAAIlD,EAAIqD,WAAW,MAAO,CAC7B,GAAMC,GAAWtD,EAAIuD,UAAU,GAAGhF,aAClC2E,GAAKM,iBAAiBF,EAAU,SAAA7B,GAAA,MAASvC,GAAMuC,SAM/C,IAJY,cAARzB,IACAA,EAAM,SAEVA,GAAM,EAAAyD,EAAAtF,WAAU6B,GACJ,UAARA,GAA4D,mBAAzChB,OAAOiB,UAAUyD,SAAS/F,KAAKuB,GAClD,IAAK,GAAMyE,KAAYzE,GACfA,EAAMgB,eAAeyD,KACrBT,EAAKU,OAAM,EAAAH,EAAAtF,WAAUwF,IAAazE,EAAMyE,QAG7C,IAAY,UAAR3D,GAA4D,mBAAzChB,OAAOiB,UAAUyD,SAAS/F,KAAKuB,GACzD,IAAK,GAAM2E,KAAc3E,GACjBA,EAAMgB,eAAe2D,IAAe3E,EAAM2E,IAC1CX,EAAKY,UAAUC,KAAI,EAAAN,EAAAtF,WAAU0F,QAIrCX,GAAKc,aAAahE,EAAKd,MAOpC,QAAS+E,GAAcd,EAASe,EAAOC,GAC1C,GAAgBrD,SAAZqC,GAAqC,OAAZA,EAA7B,CAIA,GAAIA,EAAQiB,YAAa,CACrB,GAAIC,GAAoB,GAAIlB,GAAQmB,eAAZ7E,KAA+B0D,EAAQ9C,OAAQ6D,EAEvE,OADAC,GAAczB,KAAK2B,GACZJ,EAAcI,EAAkBE,kBAAmBL,EAAOC,GAGrE,IAAKhB,EAAQqB,OACT,MAAOrB,GAAQsB,SAAWtB,EAAUuB,SAASC,eAAe,GAAKxB,EAGrE,IAAMD,GAAOwB,SAASE,cAAczB,EAAQ0B,KAE5C5B,GAAYC,EAAMC,EAIlB,KAAK,GAFC2B,GAAc3B,EAAQ4B,SAASjF,OAE5B0B,EAAQ,EAAGA,EAAQsD,EAAatD,IAAS,CAC9C,GAAMwD,GAAe7B,EAAQ4B,SAASvD,EACtC,IAAqBV,SAAjBkE,GAA+C,OAAjBA,EAAuB,CACrD,GAAMC,GAAYhB,EAAce,EAAcd,EAAOC,EACnCrD,UAAdmE,GAAyC,OAAdA,IACvBA,EAAUR,SACVvB,EAAKgC,mBAAmB,YAAaD,EAAUR,UAE/CvB,EAAKiC,YAAYF,KAMjC,MAAO/B,IJoPVlE,OAAOC,eAAejC,EAAS,cAC3BkC,OAAO,GAGX,IAAIO,GAAWT,OAAOU,QAAU,SAAUC,GAAU,IAAK,GAAIC,GAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,GAAIG,GAASF,UAAUD,EAAI,KAAK,GAAII,KAAOD,GAAcf,OAAOiB,UAAUC,eAAevC,KAAKoC,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,MAAOL,GAEvP3C,GI/TeiG,cJgUfjG,EI9ReiH,eApChB,IAAAR,GAAAnG,EAAA,IJoZM,SAASL,EAAQD,EAASM,GAE/B,YAqBA,SAAS8H,GAAmBC,GAAO,GAAI3G,MAAMC,QAAQ0G,GAAM,CAAE,IAAK,GAAIzF,GAAI,EAAG0F,EAAO5G,MAAM2G,EAAIvF,QAASF,EAAIyF,EAAIvF,OAAQF,IAAO0F,EAAK1F,GAAKyF,EAAIzF,EAAM,OAAO0F,GAAe,MAAO5G,OAAM6G,KAAKF,GKhapL,QAASG,GAAGrC,EAASC,GAAoB,OAAAhC,GAAAvB,UAAAC,OAAViF,EAAUrG,MAAA0C,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVyD,EAAUzD,EAAA,GAAAzB,UAAAyB,EAC5C,IAAI6B,GAAWA,EAAQiB,YAAa,CAChC,GAAM/D,QACC+C,GACH2B,WAAW,EAAAtB,EAAAjF,SAAQuG,QAAiBU,OAAO,SAAAC,GAAA,MAAmB,QAAVA,GAA4B5E,SAAV4E,KAE1E,QACItB,aAAa,EACbE,eAAgBnB,EAChB9C,SAGJ,OAAI,EAAAoD,EAAA1F,YAAWoF,GACJA,gBAAQC,GAARrE,OAAkBgG,KAGzBF,KAAM1B,EACNC,MAAOA,MACP2B,WAAW,EAAAtB,EAAAjF,SAAQuG,QAAiBU,OAAO,SAAAC,GAAA,MAAmB,QAAVA,GAA4B5E,SAAV4E,IACtElB,QAAQ,GAKpB,QAASmB,GAAezC,GACpB,GAAI0C,GAAW1C,CAKf,KAJoB,gBAATA,KACP0C,EAAWlB,SAASmB,eAAe3C,IAGhC0C,EAASE,YACZF,EAASG,YAAYH,EAASE,WAElC,OAAOF,GASJ,QAASI,GAAY9C,EAAMvB,GAAgC,GAArBuC,GAAqBrE,UAAAC,OAAA,GAAAgB,SAAAjB,UAAA,GAAAA,UAAA,GAAb,GAAAoG,GAAArF,KAEjDsF,GAAiBhD,GAAOvB,GAAYuC,GAGxC,QAASgC,GAAiBhD,EAAMiD,GAAiC,GAArBjC,GAAqBrE,UAAAC,OAAA,GAAAgB,SAAAjB,UAAA,GAAAA,UAAA,GAAb,GAAAoG,GAAArF,MAE1CgF,EAAWD,EAAezC,GAE1BiB,IAQN,KANA,EAAAV,EAAAjF,SAAQ2H,GAAYV,OAAO,SAAA9D,GAAA,MAA2Bb,UAAda,GAAyC,OAAdA,IAC9DyE,IAAI,SAAAzE,GAAA,OAAa,EAAA0E,EAAApC,eAActC,EAAWuC,EAAOC,KACjDmC,QAAQ,SAAApD,GAAA,MAAQ0C,GAAST,YAAYjC,KAE1CiB,EAAcmC,QAAQ,SAAA3E,GAAA,MAAaA,GAAU4E,sBAEzCpC,EAAcrE,OAAQ,CACtB,GAAM0G,GAAmB,GAAIC,kBAAiB,WACrC/B,SAASgC,KAAKC,SAASf,KACxBY,EAAiBI,aACjB1C,EAAM2C,iBAEV,KAAK,GAAIrF,GAAQ0C,EAAMjD,qBAAqBnB,OAAS,EAAG0B,GAAS,EAAGA,IAAS,CACzE,GAAMG,GAAYuC,EAAMjD,qBAAqBO,EACzCG,GAAUA,UAAUuB,OAAS0C,EAASe,SAAShF,EAAUA,UAAUuB,QACnEvB,EAAUc,WAAW6D,QAAQ,SAAAQ,GAAA,GAAErF,GAAFqF,EAAErF,MAAOhE,EAATqJ,EAASrJ,EAAT,OAAiByG,GAAM6C,wBAAwBtF,EAAOhE,KACnFkE,EAAUA,UAAUuB,KAAOpC,OAC3BoD,EAAMjD,qBAAqB+F,OAAOxF,EAAO,MAMrDgF,GAAiBS,QAAQvC,SAASgC,MAAOQ,WAAW,EAAMC,SAAS,KASpE,QAASC,KAA4B,OAAAC,GAAAxH,UAAAC,OAAVwH,EAAU5I,MAAA2I,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVD,EAAUC,GAAA1H,UAAA0H,EACxC,QAAO,EAAA9D,EAAAjF,SAAQ8I,GAAUlB,IAAI,SAAAZ,GACzB,IAAKA,EAAGX,KACJ,MAAO,IAAMW,EAAGf,UAAYe,EAEhC,IAAMgC,GAAaxI,OAAOgE,KAAKwC,EAAGpC,OAC7BqC,OAAO,SAAAgC,GAAA,OAAcA,EAAUpE,WAAW,OAAiCvC,SAAxB0E,EAAGpC,MAAMqE,IAA0C,QAAdA,IACxFrB,IAAI,SAAAqB,GACD,GAAMzH,IAAM,EAAAyD,EAAAtF,WAAwB,cAAdsJ,EAA4B,QAAUA,GACxDvI,EAAQsG,EAAGpC,MAAMqE,EAWrB,OAVY,UAARzH,GAAoC,YAAjB,mBAAOd,GAAP,YAAAwI,EAAOxI,IAC1BA,EAAQF,OAAOgE,KAAK9D,GACfkH,IAAI,SAAApG,GAAA,MAAO,IAAK,EAAAyD,EAAAtF,WAAU6B,GAAO,IAAMd,EAAMc,KAC7C2H,KAAK,KACK,UAAR3H,GAAoC,YAAjB,mBAAOd,GAAP,YAAAwI,EAAOxI,MACjCA,EAAQF,OAAOgE,KAAK9D,GAAOuG,OAAO,SAAA5B,GAAA,MAAc3E,GAAM2E,KACjDuC,IADG3C,EAAAtF,WAEHwJ,KAAK,MAGd,IAAW3H,EAAX,KAAmBd,EAAnB,MAEHyI,KAAK,IACJC,EAAUR,iBAAkB5B,EAAGT,UACrC,WAAWS,EAAGX,KAAO2C,EAArB,IAAmCI,EAAnC,KAA+CpC,EAAGX,KAAlD,MACD8C,KAAK,IASL,QAASE,GAAS3E,GAAmB,OAAA4E,GAAAjI,UAAAC,OAAVwH,EAAU5I,MAAAoJ,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAVT,EAAUS,EAAA,GAAAlI,UAAAkI,EACxC7B,GAAiBhD,EAAMoE,GLqR1BtI,OAAOC,eAAejC,EAAS,cAC3BkC,OAAO,GAGX,IAAIwI,GAA4B,kBAAXxF,SAAoD,gBAApBA,QAAOC,SAAwB,SAAU6F,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAX9F,SAAyB8F,EAAI/J,cAAgBiE,QAAU8F,IAAQ9F,OAAOjC,UAAY,eAAkB+H,IAElQvI,EAAWT,OAAOU,QAAU,SAAUC,GAAU,IAAK,GAAIC,GAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,GAAIG,GAASF,UAAUD,EAAI,KAAK,GAAII,KAAOD,GAAcf,OAAOiB,UAAUC,eAAevC,KAAKoC,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,MAAOL,GAEvP3C,GKrZewI,KLsZfxI,EK5WegJ,cL6WfhJ,EKlUeoK,iBLmUfpK,EKjSe6K,UAnIhB,IAAAxB,GAAA/I,EAAA,GACAmG,EAAAnG,EAAA,GACA2I,EAAA3I,EAAA,IL0kBM,SAASL,EAAQD,EAASM,GAE/B,YAaA,SAAS6B,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAXhHN,OAAOC,eAAejC,EAAS,cAC3BkC,OAAO,IAEXlC,EAAQiL,UAAYnH,MAEpB,IAAIX,GAAe,WAAc,QAASC,GAAiBT,EAAQU,GAAS,IAAK,GAAIT,GAAI,EAAGA,EAAIS,EAAMP,OAAQF,IAAK,CAAE,GAAIU,GAAaD,EAAMT,EAAIU,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMzB,OAAOC,eAAeU,EAAQW,EAAWN,IAAKM,IAAiB,MAAO,UAAUjB,EAAaqB,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBf,EAAYY,UAAWS,GAAiBC,GAAaP,EAAiBf,EAAasB,GAAqBtB,MMplBjiB6I,EAAA5K,EAAA,GACA+I,EAAA/I,EAAA,GAgBa2K,ENylBIjL,EMzlBJiL,UNylBwB,WMzkBjC,QAAAA,GAAY5H,GAA0B,GAAA8H,GAAA/K,KAAnB8G,EAAmBrE,UAAAC,OAAA,GAAAgB,SAAAjB,UAAA,GAAAA,UAAA,GAAXiB,MAAW3B,GAAA/B,KAAA6K,GAKlC7K,KAAKiD,MAAQA,EAKbjD,KAAK8G,MAAQA,EAEblF,OAAOoJ,oBAAoBpJ,OAAOqJ,eAAejL,OAC5CqI,OAAO,SAAAZ,GAAA,MAAiB,gBAATA,IACfY,OAAO,SAAAZ,GAAA,MAAQsD,GAAKtD,YAAiByD,YACrChC,QAAQ,SAAAzB,GAAA,MAAQsD,GAAKtD,GAAQsD,EAAKtD,GAAM0D,KAAXJ,IAfA,IAAAtG,IAAA,EAAAC,GAAA,EAAAC,EAAAjB,MAAA,KAiBlC,OAAAkB,GAAAC,EAAoB7E,KAAKoL,oBAAzBtG,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA8C,IAAnCJ,GAAmCO,EAAA9C,KAC1C9B,MAAK8G,MAAMuE,UAAUhH,EAAOrE,KAAKsL,mBAAmBH,KAAKnL,MAAOA,OAlBlC,MAAAmF,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,aAAAV,GAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,KAAAC,KNsyBrC,MA5NA5B,GAAa8H,IACTjI,IAAK,QAOL2I,IAAK,WM1lBN,MAAOvL,MAAK8G,MAAMnD,UNgqBrBZ,EAAa8H,IACTjI,IAAK,iBACLd,MAAO,SM/nBGgE,GAKX9F,KAAK8F,KAAOA,EACR9F,KAAKwL,UACLxL,KAAKwL,SAAS1F,MNyoBjBlD,IAAK,UACLd,MAAO,WMjoBR,GAAMiF,MACA0E,EAAUzL,KAAK8F,IACrB9F,MAAK8F,KAAO,IACZ,IAAI4F,IAAU,EAAAzC,EAAApC,eAAc7G,KAAKmH,kBAAmBnH,KAAK8G,MAAOC,EAChE,OAAgBrD,UAAZgI,GAAqC,OAAZA,GACzBD,EAAQE,WAAWhD,YAAY8C,OAC/BzL,MAAKmJ,sBAGTsC,EAAQE,WAAWC,aAAaF,EAASD,OAEzC1E,GAAcmC,QAAQ,SAAA3E,GAAA,MAAaA,GAAU4E,0BNgpB5CvG,IAAK,qBACLd,MAAO,SMvoBOuC,EAAOP,EAAUC,GAC3B/D,KAAK6L,YAAY9H,EAAUD,IAAc9D,KAAK8F,OAInD9F,KAAK8L,UACL9L,KAAKmJ,wBNgpBJvG,IAAK,oBACLd,MAAO,WMzoBR,YNopBCc,IAAK,cACLd,MAAO,SM5oBAiC,EAAUD,GAClB,OAAO,KNqpBNlB,IAAK,oBACLd,MAAO,eAQPc,IAAK,kBACLd,MAAO,SMjpBI0J,GAAU,GAAAO,GAAA/L,KAChBgM,EAAShM,KAAKiM,QAEpB,IADAjM,KAAKwL,SAAWA,EACD9H,SAAXsI,GAAmC,OAAXA,EACxB,OAAO,EAAAlB,EAAA1C,IAAG,OAEF8D,IAAK,SAAApG,GAAA,MAAQiG,GAAKI,eAAerG,IACjCU,OACI4F,MAAO,EACPC,OAAQ,IAMxB,IAAIL,EAAO5E,OAAQ,CACf,GAAIkF,GAASN,EAAOhG,MAAMkG,GAC1BF,GAAOhG,MAAMkG,IAAM,SAAApG,GACfwG,GAAUA,EAAOxG,GACjBiG,EAAKI,eAAerG,QAEjBkG,GAAOhF,YACdgF,EAAOR,SAAW,SAAA1F,GAAA,MAAQiG,GAAKI,eAAerG,IAE9CyG,QAAQC,MAAM,qCAAsCR,EAGxD,OAAOA,MN+pBNpJ,IAAK,SACLd,MAAO,gBAKJ+I,IMtzBCA,GACF7D,aAAc,GN4zBnB,SAASnH,EAAQD,EAASM,GAE/B,YO3zBM,SAASuM,GAAUC,EAAM3G,EAAS4G,GACrC,GAAMC,IAAS,EAAAvG,EAAA1F,YAAW+L,GAAQA,IAASA,CAC3C,OAAIE,IACO,EAAAvG,EAAA1F,YAAWoF,GAAWA,IAAYA,GAEtC,EAAAM,EAAA1F,YAAWgM,GAAeA,IAAgBA,EPwzBpD/K,OAAOC,eAAejC,EAAS,cAC3BkC,OAAO,IAEXlC,EOh0Be6M,WAtBhB,IAAAI,GAAA3M,EAAA,GACA2I,EAAA3I,EAAA,GACA4K,EAAA5K,EAAA,GACAmG,EAAAnG,EAAA,EA2BAN,GAAQiL,UAARgC,EAAAhC,UACAjL,EAAQ4D,MAARqF,EAAArF,MACA5D,EAAQwI,GAAR0C,EAAA1C,GACAxI,EAAQgJ,YAARkC,EAAAlC,YACAhJ,EAAQ6K,SAARK,EAAAL,SACA7K,EAAQoK,eAARc,EAAAd","file":"simpledom-component.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleDomComponent\"] = factory();\n\telse\n\t\troot[\"SimpleDomComponent\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleDomComponent\"] = factory();\n\telse\n\t\troot[\"SimpleDomComponent\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(6);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.isFunction = isFunction;\n\texports.dasherize = dasherize;\n\texports.flatten = flatten;\n\tfunction isFunction(object) {\n\t    return !!(object && object.constructor && object.call && object.apply);\n\t}\n\t\n\tfunction dasherize(what) {\n\t    return what.replace(/([A-Z])/g, function ($1) {\n\t        return \"-\" + $1.toLowerCase();\n\t    });\n\t}\n\t\n\tfunction flatten(array) {\n\t    if (!Array.isArray(array)) {\n\t        return array;\n\t    }\n\t    return array.reduce(function (one, two) {\n\t        return one.concat(Array.isArray(two) ? flatten(two) : two);\n\t    }, []);\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar generatedId = 1;\n\t\n\tfunction generateId() {\n\t    return generatedId++;\n\t}\n\t\n\t/**\n\t * A simple Store which receive all state changes with an event (string).\n\t */\n\t\n\tvar Store = exports.Store = function () {\n\t    /**\n\t     * The constructor.\n\t     * @param {object} initialeState the initial state.\n\t     */\n\t    function Store() {\n\t        var initialeState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t        _classCallCheck(this, Store);\n\t\n\t        /**\n\t         * The state of store.\n\t         * @type {object}\n\t         */\n\t        this.state = initialeState;\n\t        /**\n\t         * Don't touch :)\n\t         * @type {Object}\n\t         */\n\t        this.subscribers = {};\n\t\n\t        /**\n\t         * Don't touch :)\n\t         * @type {Array}\n\t         */\n\t        this.componentsSubscribes = [];\n\t    }\n\t\n\t    /**\n\t     * Method to call to change the state.\n\t     * @param {object} newState the new state (you can put only attributes changed).\n\t     * @param {...string} events events to the origin of the state change.\n\t     */\n\t\n\t\n\t    _createClass(Store, [{\n\t        key: 'updateState',\n\t        value: function updateState(newState) {\n\t            var oldState = this.state;\n\t            this.state = _extends({}, this.state, newState);\n\t\n\t            for (var _len = arguments.length, events = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t                events[_key - 1] = arguments[_key];\n\t            }\n\t\n\t            var eventsToPropagate = events.concat('*');\n\t\n\t            var index = eventsToPropagate.length;\n\t            while (index--) {\n\t                var event = eventsToPropagate[index];\n\t                if (this.subscribers[event]) {\n\t                    for (var id in this.subscribers[event]) {\n\t                        if (this.subscribers[event].hasOwnProperty(id)) {\n\t                            this.subscribers[event][id](event, this.state, oldState);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Method to call to subscribe to an event.\n\t         *\n\t         * There is a special event that catches all events : '*'.\n\t         *\n\t         * @param {string} event event to subscribe.\n\t         * @param {function(event: string, state: object, oldState:object)} callback the callback called when receive the event.\n\t         * @param {Component} component use internally to unsubcribe component when node disappear\n\t         * @return {number} the id to put in param of {@link unsubscribe} to unsubscribe.\n\t         */\n\t\n\t    }, {\n\t        key: 'subscribe',\n\t        value: function subscribe(event) {\n\t            var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (state) {};\n\t            var component = arguments[2];\n\t\n\t            if (!this.subscribers[event]) {\n\t                this.subscribers[event] = {};\n\t            }\n\t            var id = generateId();\n\t            this.subscribers[event][id] = callback;\n\t\n\t            if (component) {\n\t                var componentWrapper = undefined;\n\t                var _iteratorNormalCompletion = true;\n\t                var _didIteratorError = false;\n\t                var _iteratorError = undefined;\n\t\n\t                try {\n\t                    for (var _iterator = this.componentsSubscribes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                        var componentAlreadySubcribes = _step.value;\n\t\n\t                        if (componentAlreadySubcribes.component === component) {\n\t                            componentWrapper = componentAlreadySubcribes;\n\t                            break;\n\t                        }\n\t                    }\n\t                } catch (err) {\n\t                    _didIteratorError = true;\n\t                    _iteratorError = err;\n\t                } finally {\n\t                    try {\n\t                        if (!_iteratorNormalCompletion && _iterator.return) {\n\t                            _iterator.return();\n\t                        }\n\t                    } finally {\n\t                        if (_didIteratorError) {\n\t                            throw _iteratorError;\n\t                        }\n\t                    }\n\t                }\n\t\n\t                if (!componentWrapper) {\n\t                    componentWrapper = {\n\t                        component: component,\n\t                        subscribes: []\n\t                    };\n\t                    this.componentsSubscribes.push(componentWrapper);\n\t                }\n\t                componentWrapper.subscribes.push({\n\t                    event: event,\n\t                    id: id\n\t                });\n\t            }\n\t\n\t            return id;\n\t        }\n\t\n\t        /**\n\t         * Unsubscribe.\n\t         * @param {number} id id received at {@link subscribe}\n\t         */\n\t\n\t    }, {\n\t        key: 'unsubsribe',\n\t        value: function unsubsribe(id) {\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = Object.keys(this.subscribers)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var event = _step2.value;\n\t\n\t                    if (this.subscribers[event][id]) {\n\t                        delete this.subscribers[event][id];\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Unsubcribe all subcribers.\n\t         */\n\t\n\t    }, {\n\t        key: 'unsubscribeAll',\n\t        value: function unsubscribeAll() {\n\t            this.subscribers = {};\n\t            this.componentsSubscribes = [];\n\t        }\n\t\n\t        /**\n\t         * Unsubscribe.\n\t         * @param {string} event event sent to {@link subscribe}\n\t         * @param {number} id id received at {@link subscribe}\n\t         */\n\t\n\t    }, {\n\t        key: 'unsubscribeByEventAndId',\n\t        value: function unsubscribeByEventAndId(event, id) {\n\t            if (this.subscribers[event][id]) {\n\t                delete this.subscribers[event][id];\n\t            }\n\t        }\n\t    }]);\n\n\t    return Store;\n\t}();\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.updateAttrs = updateAttrs;\n\texports.convertToNode = convertToNode;\n\t\n\tvar _util = __webpack_require__(1);\n\t\n\tfunction updateAttrs(node, element) {\n\t    for (var key in element.attrs) {\n\t        if (element.attrs.hasOwnProperty(key) && element.attrs[key] !== undefined) {\n\t            (function () {\n\t                var value = element.attrs[key];\n\t                if (key === 'ref') {\n\t                    value(node);\n\t                } else if (key.startsWith('on')) {\n\t                    var eventKey = key.substring(2).toLowerCase();\n\t                    node.addEventListener(eventKey, function (event) {\n\t                        return value(event);\n\t                    });\n\t                } else {\n\t                    if (key === 'className') {\n\t                        key = 'class';\n\t                    }\n\t                    key = (0, _util.dasherize)(key);\n\t                    if (key === 'style' && Object.prototype.toString.call(value) == '[object Object]') {\n\t                        for (var styleKey in value) {\n\t                            if (value.hasOwnProperty(styleKey)) {\n\t                                node.style[(0, _util.dasherize)(styleKey)] = value[styleKey];\n\t                            }\n\t                        }\n\t                    } else if (key === 'class' && Object.prototype.toString.call(value) == '[object Object]') {\n\t                        for (var classValue in value) {\n\t                            if (value.hasOwnProperty(classValue) && value[classValue]) {\n\t                                node.classList.add((0, _util.dasherize)(classValue));\n\t                            }\n\t                        }\n\t                    } else {\n\t                        node.setAttribute(key, value);\n\t                    }\n\t                }\n\t            })();\n\t        }\n\t    }\n\t}\n\t\n\tfunction convertToNode(element, store, componentList) {\n\t    if (element === undefined || element === null) {\n\t        return undefined;\n\t    }\n\t\n\t    if (element.isComponent) {\n\t        var componentInstance = new element.componentClass(_extends({}, element.props), store);\n\t        componentList.push(componentInstance);\n\t        return convertToNode(componentInstance.renderComponent(), store, componentList);\n\t    }\n\t\n\t    if (!element.isElem) {\n\t        return element.__asHtml ? element : document.createTextNode('' + element);\n\t    }\n\t\n\t    var node = document.createElement(element.name);\n\t\n\t    updateAttrs(node, element);\n\t\n\t    var childLength = element.children.length;\n\t\n\t    for (var index = 0; index < childLength; index++) {\n\t        var childElement = element.children[index];\n\t        if (childElement !== undefined && childElement !== null) {\n\t            var childNode = convertToNode(childElement, store, componentList);\n\t            if (childNode !== undefined && childNode !== null) {\n\t                if (childNode.__asHtml) {\n\t                    node.insertAdjacentHTML('beforeend', childNode.__asHtml);\n\t                } else {\n\t                    node.appendChild(childNode);\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    return node;\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.el = el;\n\texports.renderToDom = renderToDom;\n\texports.renderToString = renderToString;\n\texports.renderTo = renderTo;\n\t\n\tvar _converter = __webpack_require__(3);\n\t\n\tvar _util = __webpack_require__(1);\n\t\n\tvar _Store = __webpack_require__(2);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t/**\n\t * JSX factory function to create an object representing a dom node. Designed to be used with a JSX transpiler.\n\t * @param {Object|Component|string|function} element the name of the tag, or a {@link Component}.\n\t * @param {Object} attrs properties of the node, a plain old JS object. Not optional, if no value, put empty object.\n\t * @param {Array} children the children of the node, a vararg\n\t * @return {Object} an object representing a dom node.\n\t */\n\tfunction el(element, attrs) {\n\t    for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n\t        children[_key - 2] = arguments[_key];\n\t    }\n\t\n\t    if (element && element.isComponent) {\n\t        var props = _extends({}, attrs, {\n\t            children: ((0, _util.flatten)(children) || []).filter(function (child) {\n\t                return child !== null && child !== undefined;\n\t            })\n\t        });\n\t        return {\n\t            isComponent: true,\n\t            componentClass: element,\n\t            props: props\n\t        };\n\t    } else {\n\t        if ((0, _util.isFunction)(element)) {\n\t            return element.apply(undefined, [attrs].concat(children));\n\t        }\n\t        return {\n\t            name: element,\n\t            attrs: attrs || {},\n\t            children: ((0, _util.flatten)(children) || []).filter(function (child) {\n\t                return child !== null && child !== undefined;\n\t            }),\n\t            isElem: true\n\t        };\n\t    }\n\t}\n\t\n\tfunction cleanAnGetNode(node) {\n\t    var realNode = node;\n\t    if (typeof node === 'string') {\n\t        realNode = document.getElementById(node);\n\t    }\n\t\n\t    while (realNode.firstChild) {\n\t        realNode.removeChild(realNode.firstChild);\n\t    }\n\t    return realNode;\n\t}\n\t\n\t/**\n\t * Render a component to the dom.\n\t * @param {string|Node} node the id or the node where the component must be rendered.\n\t * @param {Component} component the component to render.\n\t * @param {Store} store the store\n\t */\n\tfunction renderToDom(node, component) {\n\t    var store = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new _Store.Store();\n\t\n\t\n\t    renderComponents(node, [component], store);\n\t}\n\t\n\tfunction renderComponents(node, components) {\n\t    var store = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new _Store.Store();\n\t\n\t\n\t    var realNode = cleanAnGetNode(node);\n\t\n\t    var componentList = [];\n\t\n\t    (0, _util.flatten)(components).filter(function (component) {\n\t        return component !== undefined && component !== null;\n\t    }).map(function (component) {\n\t        return (0, _converter.convertToNode)(component, store, componentList);\n\t    }).forEach(function (node) {\n\t        return realNode.appendChild(node);\n\t    });\n\t\n\t    componentList.forEach(function (component) {\n\t        return component.componentDidMount();\n\t    });\n\t\n\t    if (componentList.length) {\n\t        var mutationObserver = new MutationObserver(function () {\n\t            if (!document.body.contains(realNode)) {\n\t                mutationObserver.disconnect();\n\t                store.unsubscribeAll();\n\t            }\n\t            for (var index = store.componentsSubscribes.length - 1; index >= 0; index--) {\n\t                var component = store.componentsSubscribes[index];\n\t                if (component.component.node && !realNode.contains(component.component.node)) {\n\t                    component.subscribes.forEach(function (_ref) {\n\t                        var event = _ref.event,\n\t                            id = _ref.id;\n\t                        return store.unsubscribeByEventAndId(event, id);\n\t                    });\n\t                    component.component.node = undefined;\n\t                    store.componentsSubscribes.splice(index, 1);\n\t                }\n\t            }\n\t        });\n\t\n\t        mutationObserver.observe(document.body, { childList: true, subtree: true });\n\t    }\n\t}\n\t\n\t/**\n\t * Render some elements into a string.\n\t * @param {Array} elements elements returned by {@link el} or primitive like string.\n\t * @return {string} html as a string.\n\t */\n\tfunction renderToString() {\n\t    for (var _len2 = arguments.length, elements = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t        elements[_key2] = arguments[_key2];\n\t    }\n\t\n\t    return (0, _util.flatten)(elements).map(function (el) {\n\t        if (!el.name) {\n\t            return '' + (el.__asHtml || el);\n\t        }\n\t        var attributes = Object.keys(el.attrs).filter(function (attribute) {\n\t            return !attribute.startsWith('on') && el.attrs[attribute] !== undefined && attribute !== 'ref';\n\t        }).map(function (attribute) {\n\t            var key = (0, _util.dasherize)(attribute === 'className' ? 'class' : attribute);\n\t            var value = el.attrs[attribute];\n\t            if (key === 'style' && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n\t                value = Object.keys(value).map(function (key) {\n\t                    return '' + (0, _util.dasherize)(key) + ':' + value[key];\n\t                }).join(';');\n\t            } else if (key === 'class' && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n\t                value = Object.keys(value).filter(function (classValue) {\n\t                    return value[classValue];\n\t                }).map(_util.dasherize).join(' ');\n\t            }\n\t\n\t            return ' ' + key + '=\"' + value + '\"';\n\t        }).join('');\n\t        var content = renderToString.apply(undefined, _toConsumableArray(el.children));\n\t        return '<' + el.name + attributes + '>' + content + '</' + el.name + '>';\n\t    }).join('');\n\t}\n\t\n\t/**\n\t * Render some elements into a node.\n\t * @param {string|Node} node the id or the node where the component must be rendered.\n\t * @param {Array} elements elements returned by {@link el} or primitive like string.\n\t */\n\tfunction renderTo(node) {\n\t    for (var _len3 = arguments.length, elements = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n\t        elements[_key3 - 1] = arguments[_key3];\n\t    }\n\t\n\t    renderComponents(node, elements);\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.Component = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _renderer = __webpack_require__(4);\n\t\n\tvar _converter = __webpack_require__(3);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Class for a component.\n\t * ```\n\t *   class HelloWorldComponent extends Component {\n\t *      render() {\n\t *          return (\n\t *              <h1>{this.props.message}</h1>\n\t *          );\n\t *      }\n\t *   }\n\t *\n\t *   renderToDom('container', <HelloWorldComponent messsage=\"Hello World!\"/>);\n\t * ```\n\t */\n\tvar Component = exports.Component = function () {\n\t    _createClass(Component, [{\n\t        key: 'state',\n\t\n\t\n\t        /**\n\t         * The state of the current store\n\t         * @type {Object}\n\t         */\n\t        get: function get() {\n\t            return this.store.state;\n\t        }\n\t\n\t        /**\n\t         * Constructor of a component.\n\t         * @param {Object} props the props (attributes pass to dom node + children)\n\t         * @param {Store} store the store.\n\t         */\n\t\n\t    }]);\n\t\n\t    function Component(props) {\n\t        var _this = this;\n\t\n\t        var store = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\t\n\t        _classCallCheck(this, Component);\n\t\n\t        /**\n\t         * The props  (attributes pass to dom node + children).\n\t         * @type {Object}\n\t         */\n\t        this.props = props;\n\t        /**\n\t         * The store share between all components.\n\t         * @type {Store}\n\t         */\n\t        this.store = store;\n\t\n\t        Object.getOwnPropertyNames(Object.getPrototypeOf(this)).filter(function (name) {\n\t            return name !== 'constructor';\n\t        }).filter(function (name) {\n\t            return _this[name] instanceof Function;\n\t        }).forEach(function (name) {\n\t            return _this[name] = _this[name].bind(_this);\n\t        });\n\t\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\t\n\t        try {\n\t            for (var _iterator = this.eventsToSubscribe()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                var event = _step.value;\n\t\n\t                this.store.subscribe(event, this.reactToChangeState.bind(this), this);\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError = true;\n\t            _iteratorError = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion && _iterator.return) {\n\t                    _iterator.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError) {\n\t                    throw _iteratorError;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Do not touch :)\n\t     * @param {Node} node parent node of the component.\n\t     */\n\t\n\t\n\t    _createClass(Component, [{\n\t        key: 'nodeRefHandler',\n\t        value: function nodeRefHandler(node) {\n\t            /**\n\t             * Parent node of the component.\n\t             * @type {Node}\n\t             */\n\t            this.node = node;\n\t            if (this.otherRef) {\n\t                this.otherRef(node);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Method to call to refresh the component without the use of the store.\n\t         * Useful for internal state with this.\n\t         */\n\t\n\t    }, {\n\t        key: 'refresh',\n\t        value: function refresh() {\n\t            var componentList = [];\n\t            var oldNode = this.node;\n\t            this.node = null;\n\t            var newNode = (0, _converter.convertToNode)(this.renderComponent(), this.store, componentList);\n\t            if (newNode === undefined && newNode === null) {\n\t                oldNode.parentNode.removeChild(oldNode);\n\t                this.componentDidMount();\n\t                return;\n\t            }\n\t            oldNode.parentNode.replaceChild(newNode, oldNode);\n\t\n\t            componentList.forEach(function (component) {\n\t                return component.componentDidMount();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Internally method which is called when an event of {@link eventsToSubscribe}\n\t         * You can override the method if you want a specific\n\t         * @param {string} event event received in the store.\n\t         * @param {Object} newState the new state.\n\t         * @param {Object} oldState the old state.\n\t         */\n\t\n\t    }, {\n\t        key: 'reactToChangeState',\n\t        value: function reactToChangeState(event, newState, oldState) {\n\t            if (!this.mustRefresh(oldState, newState) || !this.node) {\n\t                return;\n\t            }\n\t\n\t            this.refresh();\n\t            this.componentDidMount();\n\t        }\n\t\n\t        /**\n\t         * Method to implement to react when an event is send to {@link Store}\n\t         * @return {Array} array of string events to react.\n\t         */\n\t\n\t    }, {\n\t        key: 'eventsToSubscribe',\n\t        value: function eventsToSubscribe() {\n\t            return [];\n\t        }\n\t\n\t        /**\n\t         * Return false to avoid call to render on an event.\n\t         * @param {Object} oldState the old state.\n\t         * @param {Object} newState the new state.\n\t         */\n\t\n\t    }, {\n\t        key: 'mustRefresh',\n\t        value: function mustRefresh(oldState, newState) {\n\t            return true;\n\t        }\n\t\n\t        /**\n\t         * Method called after rendered into DOM.\n\t         * @abstract\n\t         */\n\t\n\t    }, {\n\t        key: 'componentDidMount',\n\t        value: function componentDidMount() {}\n\t\n\t        /**\n\t         * Method use internally to render a component.\n\t         * @return {Component|Object} This return a component or result of SimpleDom.el.\n\t         */\n\t\n\t    }, {\n\t        key: 'renderComponent',\n\t        value: function renderComponent(otherRef) {\n\t            var _this2 = this;\n\t\n\t            var result = this.render();\n\t            this.otherRef = otherRef;\n\t            if (result === undefined || result === null) {\n\t                return (0, _renderer.el)('div', {\n\t                    ref: function ref(node) {\n\t                        return _this2.nodeRefHandler(node);\n\t                    },\n\t                    style: {\n\t                        width: 0,\n\t                        height: 0\n\t                    }\n\t                });\n\t            }\n\t\n\t            if (result.isElem) {\n\t                var oldRef = result.attrs.ref;\n\t                result.attrs.ref = function (node) {\n\t                    oldRef && oldRef(node);\n\t                    _this2.nodeRefHandler(node);\n\t                };\n\t            } else if (result.isComponent) {\n\t                result.otherRef = function (node) {\n\t                    return _this2.nodeRefHandler(node);\n\t                };\n\t            } else {\n\t                console.error('Unkown result type for a component', result);\n\t            }\n\t\n\t            return result;\n\t        }\n\t\n\t        /**\n\t         * Method to implement to render something.\n\t         * @abstract\n\t         * @return {Component|Object} This return a component or result of {@link el}.\n\t         */\n\t\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            return undefined;\n\t        }\n\t    }]);\n\t\n\t    return Component;\n\t}();\n\t\n\tComponent.isComponent = true;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.predicate = predicate;\n\t\n\tvar _Component = __webpack_require__(5);\n\t\n\tvar _Store = __webpack_require__(2);\n\t\n\tvar _renderer = __webpack_require__(4);\n\t\n\tvar _util = __webpack_require__(1);\n\t\n\t/**\n\t * Can be used as a simple if/else statement info your jsx :\n\t * ```\n\t *  SimpleDom.renderTo('container',\n\t *      <div>\n\t *          SimpleDom.predicate(myCondition,\n\t *              <h1>myCondition is true</h1>,\n\t *              <h1>myCondition is false</h1>\n\t *          )\n\t *      </div>\n\t *  );\n\t * ```\n\t * @param {boolean|function():boolean} cond condition to evaluate\n\t * @param {*} element element to return if cond is true (if it's a function, the result of the function is returned).\n\t * @param {*} elseElement element to return if cond is false (if it's a function, the result of the function is returned).\n\t * @return {*} element or elseElement depending of cond value.\n\t */\n\tfunction predicate(cond, element, elseElement) {\n\t    var isTrue = (0, _util.isFunction)(cond) ? cond() : cond;\n\t    if (isTrue) {\n\t        return (0, _util.isFunction)(element) ? element() : element;\n\t    }\n\t    return (0, _util.isFunction)(elseElement) ? elseElement() : elseElement;\n\t}\n\t\n\texports.Component = _Component.Component;\n\texports.Store = _Store.Store;\n\texports.el = _renderer.el;\n\texports.renderToDom = _renderer.renderToDom;\n\texports.renderTo = _renderer.renderTo;\n\texports.renderToString = _renderer.renderToString;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// simpledom-component.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3efa59fd0cd38d10e2b8","\n\nexport function isFunction(object) {\n    return !!(object && object.constructor && object.call && object.apply);\n}\n\n\nexport function dasherize(what) {\n    return what.replace(/([A-Z])/g, function($1){return \"-\"+$1.toLowerCase();});\n}\n\nexport function flatten(array) {\n    if (!Array.isArray(array)) {\n        return array;\n    }\n    return array.reduce(\n        (one, two) => one.concat(Array.isArray(two) ? flatten(two) : two), []\n    );\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util.js","\n\nlet generatedId = 1;\n\nfunction generateId() {\n    return generatedId++;\n}\n\n/**\n * A simple Store which receive all state changes with an event (string).\n */\nexport class Store {\n    /**\n     * The constructor.\n     * @param {object} initialeState the initial state.\n     */\n    constructor(initialeState = {}) {\n        /**\n         * The state of store.\n         * @type {object}\n         */\n        this.state = initialeState;\n        /**\n         * Don't touch :)\n         * @type {Object}\n         */\n        this.subscribers = {};\n\n        /**\n         * Don't touch :)\n         * @type {Array}\n         */\n        this.componentsSubscribes = [];\n    }\n\n    /**\n     * Method to call to change the state.\n     * @param {object} newState the new state (you can put only attributes changed).\n     * @param {...string} events events to the origin of the state change.\n     */\n    updateState(newState, ...events) {\n        const oldState = this.state;\n        this.state = {...this.state, ...newState};\n\n        const eventsToPropagate = events.concat('*');\n\n        let index = eventsToPropagate.length;\n        while (index--) {\n            const event = eventsToPropagate[index];\n            if (this.subscribers[event]) {\n                for (const id in this.subscribers[event]) {\n                    if (this.subscribers[event].hasOwnProperty(id)) {\n                        this.subscribers[event][id](event, this.state, oldState);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Method to call to subscribe to an event.\n     *\n     * There is a special event that catches all events : '*'.\n     *\n     * @param {string} event event to subscribe.\n     * @param {function(event: string, state: object, oldState:object)} callback the callback called when receive the event.\n     * @param {Component} component use internally to unsubcribe component when node disappear\n     * @return {number} the id to put in param of {@link unsubscribe} to unsubscribe.\n     */\n    subscribe(event, callback = state => {}, component) {\n        if (!this.subscribers[event]) {\n            this.subscribers[event] = {};\n        }\n        const id = generateId();\n        this.subscribers[event][id] = callback;\n\n        if (component) {\n            let componentWrapper = undefined;\n            for (const componentAlreadySubcribes of this.componentsSubscribes) {\n                if (componentAlreadySubcribes.component === component) {\n                    componentWrapper = componentAlreadySubcribes;\n                    break;\n                }\n            }\n            if (!componentWrapper) {\n                componentWrapper = {\n                    component,\n                    subscribes: []\n                };\n                this.componentsSubscribes.push(componentWrapper);\n            }\n            componentWrapper.subscribes.push({\n                event,\n                id\n            });\n        }\n\n        return id;\n    }\n\n    /**\n     * Unsubscribe.\n     * @param {number} id id received at {@link subscribe}\n     */\n    unsubsribe(id) {\n        for (let event of Object.keys(this.subscribers)) {\n            if (this.subscribers[event][id]) {\n                delete this.subscribers[event][id];\n            }\n        }\n    }\n\n    /**\n     * Unsubcribe all subcribers.\n     */\n    unsubscribeAll() {\n        this.subscribers = {};\n        this.componentsSubscribes = [];\n    }\n\n\n\n    /**\n     * Unsubscribe.\n     * @param {string} event event sent to {@link subscribe}\n     * @param {number} id id received at {@link subscribe}\n     */\n    unsubscribeByEventAndId(event, id) {\n        if (this.subscribers[event][id]) {\n            delete this.subscribers[event][id];\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Store.js","\nimport {dasherize} from './util';\n\nexport function updateAttrs(node, element) {\n    for (let key in element.attrs) {\n        if (element.attrs.hasOwnProperty(key) && element.attrs[key] !== undefined) {\n            let value = element.attrs[key];\n            if (key === 'ref') {\n                value(node);\n            } else if (key.startsWith('on')) {\n                const eventKey = key.substring(2).toLowerCase();\n                node.addEventListener(eventKey, event => value(event));\n            } else {\n                if (key === 'className') {\n                    key = 'class';\n                }\n                key = dasherize(key);\n                if (key === 'style' && Object.prototype.toString.call(value) == '[object Object]') {\n                    for (const styleKey in value) {\n                        if (value.hasOwnProperty(styleKey)) {\n                            node.style[dasherize(styleKey)] = value[styleKey]\n                        }\n                    }\n                } else if (key === 'class' && Object.prototype.toString.call(value) == '[object Object]') {\n                    for (const classValue in value) {\n                        if (value.hasOwnProperty(classValue) && value[classValue]) {\n                            node.classList.add(dasherize(classValue));\n                        }\n                    }\n                } else {\n                    node.setAttribute(key, value);\n                }\n            }\n        }\n    }\n}\n\nexport function convertToNode(element, store, componentList) {\n    if (element === undefined || element === null) {\n        return undefined;\n    }\n\n    if (element.isComponent) {\n        let componentInstance = new element.componentClass({...element.props}, store);\n        componentList.push(componentInstance);\n        return convertToNode(componentInstance.renderComponent(), store, componentList);\n    }\n\n    if (!element.isElem) {\n        return element.__asHtml ? element : document.createTextNode('' + element);\n    }\n\n    const node = document.createElement(element.name);\n\n    updateAttrs(node, element);\n\n    const childLength = element.children.length;\n\n    for (let index = 0; index < childLength; index++) {\n        const childElement = element.children[index];\n        if (childElement !== undefined && childElement !== null) {\n            const childNode = convertToNode(childElement, store, componentList);\n            if (childNode !== undefined && childNode !== null) {\n                if (childNode.__asHtml) {\n                    node.insertAdjacentHTML('beforeend', childNode.__asHtml);\n                } else {\n                    node.appendChild(childNode);\n                }\n            }\n        }\n    }\n\n    return node;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/converter.js","import { convertToNode } from './converter';\nimport { flatten, dasherize, isFunction } from './util';\nimport { Store } from './Store';\n\n\n/**\n * JSX factory function to create an object representing a dom node. Designed to be used with a JSX transpiler.\n * @param {Object|Component|string|function} element the name of the tag, or a {@link Component}.\n * @param {Object} attrs properties of the node, a plain old JS object. Not optional, if no value, put empty object.\n * @param {Array} children the children of the node, a vararg\n * @return {Object} an object representing a dom node.\n */\nexport function el(element, attrs, ...children) {\n    if (element && element.isComponent) {\n        const props = {\n            ...attrs,\n            children: (flatten(children) || []).filter(child => child !== null && child !== undefined)\n        };\n        return {\n            isComponent: true,\n            componentClass: element,\n            props\n        };\n    } else {\n        if (isFunction(element)) {\n            return element(attrs, ...children);\n        }\n        return {\n            name: element,\n            attrs: attrs || {},\n            children: (flatten(children) || []).filter(child => child !== null && child !== undefined),\n            isElem: true\n        };\n    }\n}\n\nfunction cleanAnGetNode(node) {\n    let realNode = node;\n    if (typeof node === 'string') {\n        realNode = document.getElementById(node);\n    }\n\n    while (realNode.firstChild) {\n        realNode.removeChild(realNode.firstChild);\n    }\n    return realNode;\n}\n\n/**\n * Render a component to the dom.\n * @param {string|Node} node the id or the node where the component must be rendered.\n * @param {Component} component the component to render.\n * @param {Store} store the store\n */\nexport function renderToDom(node, component, store = new Store()) {\n\n    renderComponents(node, [component], store);\n}\n\nfunction renderComponents(node, components, store = new Store()) {\n\n    const realNode = cleanAnGetNode(node);\n\n    const componentList = [];\n\n    flatten(components).filter(component => component !== undefined && component !== null)\n        .map(component => convertToNode(component, store, componentList))\n        .forEach(node => realNode.appendChild(node));\n\n    componentList.forEach(component => component.componentDidMount());\n\n    if (componentList.length) {\n        const mutationObserver = new MutationObserver(() => {\n            if (!document.body.contains(realNode)) {\n                mutationObserver.disconnect();\n                store.unsubscribeAll();\n            }\n            for (let index = store.componentsSubscribes.length - 1; index >= 0; index--) {\n                const component = store.componentsSubscribes[index];\n                if (component.component.node && !realNode.contains(component.component.node)) {\n                    component.subscribes.forEach(({event, id}) => store.unsubscribeByEventAndId(event, id));\n                    component.component.node = undefined;\n                    store.componentsSubscribes.splice(index, 1);\n                }\n            }\n        });\n\n\n        mutationObserver.observe(document.body, {childList: true, subtree: true});\n    }\n}\n\n/**\n * Render some elements into a string.\n * @param {Array} elements elements returned by {@link el} or primitive like string.\n * @return {string} html as a string.\n */\nexport function renderToString(...elements) {\n    return flatten(elements).map(el => {\n        if (!el.name) {\n            return '' + (el.__asHtml || el);\n        }\n        const attributes = Object.keys(el.attrs)\n            .filter(attribute => !attribute.startsWith('on') && el.attrs[attribute] !== undefined && attribute !== 'ref')\n            .map(attribute => {\n                const key = dasherize(attribute === 'className' ? 'class' : attribute);\n                let value = el.attrs[attribute];\n                if (key === 'style' && typeof value === 'object') {\n                    value = Object.keys(value)\n                        .map(key => '' + dasherize(key) + ':' + value[key])\n                        .join(';');\n                } else if (key === 'class' && typeof value === 'object') {\n                    value = Object.keys(value).filter(classValue => value[classValue])\n                        .map(dasherize)\n                        .join(' ');\n                }\n\n                return ` ${key}=\"${value}\"`\n            })\n            .join('');\n        const content = renderToString(...el.children);\n        return `<${el.name}${attributes}>${content}</${el.name}>`\n    }).join('');\n}\n\n\n/**\n * Render some elements into a node.\n * @param {string|Node} node the id or the node where the component must be rendered.\n * @param {Array} elements elements returned by {@link el} or primitive like string.\n */\nexport function renderTo(node, ...elements) {\n    renderComponents(node, elements)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/renderer.js","\nimport { el } from './renderer';\nimport { convertToNode } from './converter';\n\n/**\n * Class for a component.\n * ```\n *   class HelloWorldComponent extends Component {\n *      render() {\n *          return (\n *              <h1>{this.props.message}</h1>\n *          );\n *      }\n *   }\n *\n *   renderToDom('container', <HelloWorldComponent messsage=\"Hello World!\"/>);\n * ```\n */\nexport class Component {\n    static isComponent = true;\n\n    /**\n     * The state of the current store\n     * @type {Object}\n     */\n    get state() {\n        return this.store.state;\n    }\n\n    /**\n     * Constructor of a component.\n     * @param {Object} props the props (attributes pass to dom node + children)\n     * @param {Store} store the store.\n     */\n    constructor(props, store = undefined) {\n        /**\n         * The props  (attributes pass to dom node + children).\n         * @type {Object}\n         */\n        this.props = props;\n        /**\n         * The store share between all components.\n         * @type {Store}\n         */\n        this.store = store;\n\n        Object.getOwnPropertyNames(Object.getPrototypeOf(this))\n            .filter(name => name !== 'constructor')\n            .filter(name => this[name] instanceof Function)\n            .forEach(name => this[name] = this[name].bind(this));\n\n        for (const event of this.eventsToSubscribe()) {\n            this.store.subscribe(event, this.reactToChangeState.bind(this), this);\n        }\n    }\n\n\n    /**\n     * Do not touch :)\n     * @param {Node} node parent node of the component.\n     */\n    nodeRefHandler(node) {\n        /**\n         * Parent node of the component.\n         * @type {Node}\n         */\n        this.node = node;\n        if (this.otherRef) {\n            this.otherRef(node);\n        }\n    }\n\n    /**\n     * Method to call to refresh the component without the use of the store.\n     * Useful for internal state with this.\n     */\n    refresh() {\n        const componentList = [];\n        const oldNode = this.node;\n        this.node = null;\n        let newNode = convertToNode(this.renderComponent(), this.store, componentList);\n        if (newNode === undefined && newNode === null) {\n            oldNode.parentNode.removeChild(oldNode);\n            this.componentDidMount();\n            return;\n        }\n        oldNode.parentNode.replaceChild(newNode, oldNode);\n\n        componentList.forEach(component => component.componentDidMount());\n    }\n\n    /**\n     * Internally method which is called when an event of {@link eventsToSubscribe}\n     * You can override the method if you want a specific\n     * @param {string} event event received in the store.\n     * @param {Object} newState the new state.\n     * @param {Object} oldState the old state.\n     */\n    reactToChangeState(event, newState, oldState) {\n        if (!this.mustRefresh(oldState, newState) || !this.node) {\n            return;\n        }\n\n        this.refresh();\n        this.componentDidMount();\n    }\n\n    /**\n     * Method to implement to react when an event is send to {@link Store}\n     * @return {Array} array of string events to react.\n     */\n    eventsToSubscribe() {\n        return [];\n    }\n\n\n    /**\n     * Return false to avoid call to render on an event.\n     * @param {Object} oldState the old state.\n     * @param {Object} newState the new state.\n     */\n    mustRefresh(oldState, newState) {\n        return true;\n    }\n\n    /**\n     * Method called after rendered into DOM.\n     * @abstract\n     */\n    componentDidMount() {\n    }\n\n    /**\n     * Method use internally to render a component.\n     * @return {Component|Object} This return a component or result of SimpleDom.el.\n     */\n    renderComponent(otherRef) {\n        const result = this.render();\n        this.otherRef = otherRef;\n        if (result === undefined || result === null) {\n            return el('div',\n                {\n                    ref: node => this.nodeRefHandler(node),\n                    style: {\n                        width: 0,\n                        height: 0\n                    }\n                }\n            );\n        }\n\n        if (result.isElem) {\n            let oldRef = result.attrs.ref;\n            result.attrs.ref = node => {\n                oldRef && oldRef(node);\n                this.nodeRefHandler(node);\n            };\n        } else if (result.isComponent) {\n            result.otherRef = node => this.nodeRefHandler(node);\n        } else {\n            console.error('Unkown result type for a component', result);\n        }\n\n        return result;\n    }\n\n    /**\n     * Method to implement to render something.\n     * @abstract\n     * @return {Component|Object} This return a component or result of {@link el}.\n     */\n    render() {\n        return undefined;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Component.js","import { Component } from './Component';\nimport { Store } from './Store';\nimport { el, renderToDom, renderTo, renderToString } from './renderer';\nimport { isFunction } from  './util';\n\n/**\n * Can be used as a simple if/else statement info your jsx :\n * ```\n *  SimpleDom.renderTo('container',\n *      <div>\n *          SimpleDom.predicate(myCondition,\n *              <h1>myCondition is true</h1>,\n *              <h1>myCondition is false</h1>\n *          )\n *      </div>\n *  );\n * ```\n * @param {boolean|function():boolean} cond condition to evaluate\n * @param {*} element element to return if cond is true (if it's a function, the result of the function is returned).\n * @param {*} elseElement element to return if cond is false (if it's a function, the result of the function is returned).\n * @return {*} element or elseElement depending of cond value.\n */\nexport function predicate(cond, element, elseElement) {\n    const isTrue = isFunction(cond) ? cond() : cond;\n    if (isTrue) {\n        return isFunction(element) ? element() : element;\n    }\n    return isFunction(elseElement) ? elseElement() : elseElement;\n}\n\nexports.Component = Component;\nexports.Store = Store;\nexports.el = el;\nexports.renderToDom = renderToDom;\nexports.renderTo = renderTo;\nexports.renderToString = renderToString;\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}